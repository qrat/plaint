% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/latex.R
\name{latex}
\alias{latex}
\alias{latex.data.frame}
\alias{latex.form}
\alias{latex.matrix}
\alias{latex.table}
\title{Print Dataset to LaTeX Table}
\usage{
latex(data, file = "table.tex", design = "design.txt", options = NULL,
  ...)

\method{latex}{form}(data, file = "table.tex", design = "design.txt",
  options = NULL)

\method{latex}{data.frame}(data, file = "table.tex", design = "design.txt",
  options = NULL, ...)

\method{latex}{matrix}(data, file = "table.tex", design = "design.txt",
  options = NULL, ...)

\method{latex}{table}(data, file = "table.tex", design = "design.txt",
  options = NULL, ...)
}
\arguments{
\item{data}{The object to be printed. Will coerce \code{data} via
\code{\link{form}} into a "formed" frame. Supports arbitrary
formats such as data.frame, matrix or table.}

\item{file}{The character file path to print the latex table to.
Default: table.tex.}

\item{design}{The path to the PlainT table design. By default, the name is
set to 'design.txt'. If the design file does not exist, a
basic default design for \code{data} will be created
automatically and saved to \code{design}. The design rules
as outlined in the Details section apply. See the vignette
for examples of the intuitive WYSIWYM PlainT markup language
in practice. Caution: If you use tabs for formatting, they
will be replaced by three spaces. Better use spaces directly.}

\item{options}{A list with options <name> = <value> may be specified here.
These options will overwrite all options which might be
written in the head of the \code{design} file (see Details).
By default, a wrapper document \code{document.tex} is
created. It embeds \code{file} within a \code{table}
environment with \strong{all necessary packages}. This is
considered very useful for an easy migration of the table
into other documents as well as for quick testing purposes.
See Details for a list with all options and their default
values.}

\item{...}{All additional arguments are passed to \code{\link{form}}.
Notice that \code{form} can only be applied to unformed
datasets.}
}
\value{
The function returns \code{TRUE} if no error occurred.
}
\description{
Prints a dataset into a user-designed LaTeX table based on a
             simple markup language for tables: PlainT.
}
\details{
The function creates a state of the art user-designed LaTeX table
         from \code{data} based on the \emph{What You See Is What You Mean
         (WYSIWYM)} \strong{Plain Table Markup Language (PlainT)} which is
         highly flexible and accessible. PlainT was suggested by this
         package's author to allow for easy creation, manipulation and
         re-use of table designs for dynamically generated contents. Review
         the vignettesa and the example section for feature rich example
         designs.

         \strong{PlainT syntax and usage:}

         A \strong{PlainT design file} is a plain text file allowing you to
         visually design your table with characters by means of a preferred
         simple text editor of your choice.

         The table design is divided into the \strong{head} consisting of
         column "titles" and the \strong{body} with column "elements" which
         are placeholders for the dynamically inserted column contents from
         an arbitrary dataset. The column design is defined by the relative
         positions of the head titles which can be written in multiple rows.
         Head and body may contain an arbitrary number of horizontal and
         vertical spaces and ruler as outlined below.

         \strong{Spaces} are set to separate columns. Use three spaces to
         separate two columns by an empty column. You can create groups and
         subgroups by an arbitrary depth. Multiple empty columns are also
         supported. Tabs are converted to three spaces but better use spaces
         only in order to still see an unique PlainT design in different
         text editor. Empty lines or space lines are directly adopted.

         \strong{Ruler} just containing "-" (thin line) or "=" (thick line)
         are regarded as horizontal separators. A standard table contains
         three of them: top (thick, above the head), mid (thin, betweem head
         and body) and bottom (thick, below the body). Vertical lines are
         created by means of the character "|". Horizontal and vertical lines
         can be connected by "+".

         All \strong{titles} and \strong{elements} as mentioned above can be
         written and \strong{aligned} as outlined:
         \enumerate{
           \item "\code{:<text>:}" aligns the title or column to center,
                 "\code{:<text>}" aligns to the left and "\code{<text>:}"
                 aligns to the right.
           \item "\code{:.<text>.:}" is only available for body elements and
                 aligns each column value at the decimal sign (a dot).
           \item Above, \code{<text>} is an arbtrary LaTeX body text. Use
                 \code{$} to even print math formulas in your titles.
                 Caution: If \code{<text>} contains spaces, you must
                 surround it by \strong{quotes}, i. e. \code{"<text>"}.
         }

         Currently, the \strong{body} must contain one row with "\code{@}"
         signs \strong{referring data columns} from the dataset to be
         inserted. A data column will be inserted in the column of the next
         title above "\code{@}" or a preceding "\code{:}" that covers its
         position. If you write "\code{@<nr>}" and "\code{<nr>}" refers to
         a valid column index in \code{data} then that column is inserted at
         this position. Also, if you write "\code{@<name>}" and
         "\code{<name>}" refers to a valid column name in \code{data} then
         that column taken. If no index or name reference is provided, the
         columns will be filled in as they appear in \code{data} without
         the subset of those which are referenced directly. Additionally,
         you can
         \enumerate{
           \item \strong{combine} multiple data columns in one table column,
           \item the mentioned \strong{alignment} rules apply, and
           \item you can \strong{surround each value} per column by static
                 text, for instance: \code{:.@mean(@sd).:}.
         }

         \strong{Subsets} are arbitrary text lines beginning or ending with
         "::". They are employed to write subtitles and divide the body in
         several parts.

         \strong{Options} can be written directly in the design file. They
         are set line by line on top of \code{design} by means of the
         syntax "#+<name> = <value>". All available options with their
         default values:
         \itemize{
           \item centering = TRUE
           \item document = document.tex
           \item landscape = FALSE
           \item rownames = TRUE
           \item size = normalsize
           \item tabularx = FALSE
         }
         Caution: The function argument \code{options} overwrites the design
         file specified options.

         \strong{Description} is to be coming soon.

         The package and this function will be improved by missing
         functionality on a regular basis. The author is eager to receive
         your suggestions in order to improve the dynamics and power of
         PlainT and \code{latex}. Please write to Fabian Raters
         (mail@qrat.de).
}
\examples{
## basic example
latex(mtcars)

## table example
latex(table(state.division, state.region), design = "table.txt")

## in combination with form
mtcarsf <- form(data = mtcars,
                format = "\%i",
                formatcolumns = list("\%5.1f" = "disp",
                                     "\%3i" = "hp",
                                     "\%4.1f" = "qsec",
                                     "\%4.2f" = c("drat", "wt")),
                marker = list(min = c("mpg", "cyl", "disp", "hp", "drat", "wt", "qsec"),
                              max = c("mpg", "cyl", "disp", "hp", "drat", "wt", "qsec"),
                              "v==1" = "am",
                              "sqrt(v)==2" = c("cyl", "gear", "carb")),
                symbols = list("** v" = "max.all",
                               ".. v" = "min.all",
                               "* v" = "max.german",
                               ". v" = "min.german",
                               "\\\\textbf{v}" = "=="),
                groups = list(german = c("Merc", "Porsche")))

latex(mtcarsf, design = "mtcars.txt")

# use the generated template "mtcars.txt" to design the LaTeX table and
# re-run the last command
latex(mtcarsf, design = "mtcars.txt")
}
\seealso{
For forming a dataset, see \code{\link{form}}.
}

